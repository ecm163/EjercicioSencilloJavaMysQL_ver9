/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import static vista.Vista.Escritorio;

/**
 *
 * @author Emilio
 */
public class Info extends javax.swing.JInternalFrame {

    /**
     * Creates new form Instrucciones
     */
    public Info() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        BotonMasInfo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setText("Estas son algunas de las instrucciones del programa.");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("1- Conexión con la base de datos:\n\n   1.1- Mediante XAMPP y phpMyAdmin crear una base de datos \n        llamada 'sistema' y dentro de ella la tabla 'usuario'\n   1.2- En el XAMPP Control Panel, activar Apache y MySQL.\n\n2- Gestión de base de datos:\n\n   Una vez ingresado el login correctamente, nos aparece el \n   interfaz del programa principal con varias pestañas.\n   Ir a la pestaña 'Registro/Consulta'. En dicha pestaña \n   hacer clic en el botón activar.\n\n   Ahí podemos encontrar botones y campor varias para implementar\n   varias funcionalidades.\n\n   2.1- Ingresar nuevo usuario:\n    \n        - Rellenar en el panel llamado 'Nuevo Registro' los campos\n          (Nombre, Apellidos, Edad, Correo).\n        - Clic en botón Guardar.\n\n   2.2- Limpiar los campos (Nombre, Apellidos, Edad, Correo\n        y el que está a la izquierda del botón buscar):\n\n        - Pulsar botón limpiar.\n\n   2.3- Buscar usuarios en la tabla:\n\n        Es posible buscar un usuario en la tabla mediante su Id,\n        nombre, apellidos, edad y correo.\n\n        2.3.1- Buscar por Id:\n\n             - En el desplegable seleccionar Id.\n             - En el campo debajo del desplegable introducir Id del\n               usuario buscado.\n             - En la tabla aparecerá sólo la fila del usuario buscado.\n             - Para que se vuelva a ver la tabla completa clic en botón\n               'Mostrar Tabla Completa'.\n\n\n        2.3.2- Buscar por Nombre:\n\n             - En el desplegable seleccionar Nombre.\n             - En el campo debajo del desplegable introducir Nombre del\n               usuario buscado.\n             - En la tabla aparecerá sólo la fila del usuario buscado.\n             - Para que se vuelva a ver la tabla completa clic en botón\n               'Mostrar Tabla Completa'.\n\n\n        2.3.3- Buscar por Apellidos:\n\n             - En el desplegable seleccionar Apellidos.\n             - En el campo debajo del desplegable introducir Apellidos del\n               usuario buscado.\n             - En la tabla aparecerá sólo la fila del usuario buscado.\n             - Para que se vuelva a ver la tabla completa clic en botón\n               'Mostrar Tabla Completa'.\n\n\n        2.3.4- Buscar por Edad:\n\n             - En el desplegable seleccionar Edad.\n             - En el campo debajo del desplegable introducir Edad del\n               usuario buscado.\n             - En la tabla aparecerá sólo la fila del usuario buscado.\n             - Para que se vuelva a ver la tabla completa clic en botón\n               'Mostrar Tabla Completa'.\n\n\n        2.3.5- Buscar por Correo:\n\n             - En el desplegable seleccionar Correo.\n             - En el campo debajo del desplegable introducir Correo del\n               usuario buscado.\n             - En la tabla aparecerá sólo la fila del usuario buscado.\n             - Para que se vuelva a ver la tabla completa clic en botón\n               'Mostrar Tabla Completa'.\n        \n   2.4- Modificar un dato en la tabla:\n\n             - Si se desea se puede buscar la fila del usuario del que se\n               quiere modificar algún dato.\n             - En cualquier caso seleccionar la fila del usuario al que \n               se le quiere modificar algún dato.\n             - Hacer clic en botón 'Modificar.\n             - En el panel (gris más oscuro) 'Nuevo registro', se llenan\n               los campos Nombre, Apellidos, Edad y Correo con los datos\n               del usuario al que le queremos modificar algún dato.\n             - Modificar el o los datos que deseemos en el panel 'Nuevo\n               Registro', ya sea el en campo Nombre, en el campo Apellidos,\n               en el campo Edad o en el campo Correo.\n             - Clic en el botón Actualizar.\n\n   2.5- Eliminar un usuario en la tabla:\n\n             - Si se desea se puede buscar la fila del usuario al que se\n               quiere eliminar de la base de datos.\n             - En cualquier caso seleccionar la fila del usuario al que \n               se quiere eliminar de la base de datos.\n             - Hacer clic en el botón 'Eliminar'.\n\n   2.6- Generar informe de la tabla:\n\n             - Clic en botón 'Generar Informe'.\n\n\n3- Subir una nueva imagen para que aparezca en la pestaña principal:\n\n             - Ir a pestaña 'Configuración'.\n             - Clic en botón cambiar.\n             - Navegar a la imagen jpg, jpeg o png que se quiere subir\n               al interfaz para cambiar la que está por defecto en la \n               pestaña principal.\n             - Sleccionar la imagen en cuestión y clic en abrir.\n             - Si vamos a la pestaña prinicpal verémos que la imagen a \n               cambiado.\n             \n    Hecho por ecm163®.             \n\n        ");
        jScrollPane1.setViewportView(jTextArea1);

        BotonMasInfo.setText("Más Información");
        BotonMasInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonMasInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(272, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BotonMasInfo)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(BotonMasInfo)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonMasInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonMasInfoActionPerformed
        
        MasInfo masInfo = new MasInfo();
        
        Escritorio.add(masInfo);
        masInfo.toFront();
        masInfo.setVisible(true);
        //this.dispose(); //Para cerrar el JInternal Frame Info cuando el masInfo se abre.
        
    }//GEN-LAST:event_BotonMasInfoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton BotonMasInfo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
